swagger: "2.0"
info:
  description: "This is an API to get information about a bank account"
  version: "1.0.0"
  title: "Swagger Bank account"
  contact:
    email: "remy.argentin@inoco.fr"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/"
tags:
- name: "Authentication"
  description: "Allows you to authenticate as a bank customer"
- name: "Transactions"
  description: "Allows you to do various operations on the bank account"
schemes:
- "http"
paths:
  /login:
    post:
      tags:
      - "Authentication"
      summary: "Logs user into the system"
      operationId: "loginUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userAuth"
        in: "body"
        description: "Information of the customer wishing to identify himself"
        required: true
        schema:
          $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/User"
        "401":
          description: "User unauthorized"
  /logout:
    get:
      tags:
      - "Authentication"
      summary: "Logs out current logged in user session"
      operationId: "logoutUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successful operation"
  /transaction/history:
    get:
      tags:
      - "Transactions"
      summary: "Get all of a customer's transactions"
      operationId: getTransactionHistory
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
        "401":
          description: "User unauthorized"
  /transaction/accountStatement/{startDate}-{endDate}:
    get:
      tags:
      - "Transactions"
      summary: "Get all of a customer's transactions between a time interval"
      operationId: geAccountStatement
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "startDate"
        in: "path"
        description: "The start date of the time interval"
        required: true
        type: "string"
      - name: "endDate"
        in: "path"
        description: "The end date of the time interval"
        required: true
        type: "string"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
        "400":
          description: "Bad request"
        "401":
          description: "User unauthorized"
  /transaction/deposit:
    put:
      tags:
      - "Transactions"
      summary: "Make a deposit for a customer"
      operationId: toMakeDeposit
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transaction"
        in: "body"
        description: "The transaction to make deposit"
        required: true
        schema:
          $ref: "#/definitions/Transaction"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Transaction"
        "401":
          description: "User unauthorized"
  /transaction/withdrawal:
    put:
      tags:
      - "Transactions"
      summary: "Make a withdrawal for a customer"
      operationId: toMakeWithdrawal
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transaction"
        in: "body"
        description: "The transaction to make withdrawal"
        required: true
        schema:
          $ref: "#/definitions/Transaction"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: "User action"
        "401":
          description: "User unauthorized"
definitions:
  Authentication:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      password:
        type: "string"
    xml:
      name: "Authentication"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      firstName:
        type: "string"
      lastName:
        type: "string"
      balance:
        type: "integer"
        format: "int32"
      transactionList:
        type: "array"
        items:
          $ref: "#/definitions/Transaction"
    xml:
      name: "User"
  Transaction:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      userId:
        type: "integer"
        format: "int64"
      operation:
        type: "array"
        items:
          $ref: "#/definitions/Operation"
      wording:
        type: "string"
      date:
        type: "string"
      amount:
        type: "integer"
        format: "int32"
      balance:
        type: "integer"
        format: "int32"
    xml:
      name: "Transaction"
  Operation:
    type: string
    enum:
      - DEPOSIT
      - WITHDRAWAL
